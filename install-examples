#!/bin/bash

# display a message and read a variable if it isn't already defined
function read_variable {
  # if not already defined then
  # ask the user for the specified variable
  if [ ! $(eval "echo \$$1") ]; then
    echo -e $2
    read $1
  fi
}

read_variable "cgidir" "Where do you want to install the cgi scripts?"
read_variable "cgiurl" "What is the url for the cgi directory?"

read_variable "libdir" "Where do you want to install the javascript libraries?"
read_variable "liburl" "What is the url for the library directory?"

read_variable "examplesdir" "Where do you want to install the examples page and source file?"
read_variable "examplesurl" "What is the url for the examples directory?"

read_variable "windowspaths" "Convert to windows path names [yes/no]?"

path=$PWD/links
if [ $windowspaths = "yes" ]; then
  path=$(cygpath -w $path)
  copysource=yes
fi

# remove trailing slash
function remove_trailing_slash {
 echo $1 | sed 's|/$||g'
}

# add trailing slash
#   if string is non-empty and doesn't already end in a slash
function add_trailing_slash {
 echo $1 | sed 's|\([^/]\)$|\1/|g' 
}

# remove trailing slash from dirs
cgidir=$(remove_trailing_slash $cgidir)
libdir=$(remove_trailing_slash $libdir)
examplesdir=$(remove_trailing_slash $examplesdir)

# add trailing slash to non-empty urls
cgiurl=$(add_trailing_slash $cgiurl)
liburl=$(add_trailing_slash $liburl)
examplesurl=$(add_trailing_slash $examplesurl)

configfile="$cgidir/config"

# ensure any required directories are created
if [ ! -e $cgidir ]; then
  mkdir -p $cgidir
fi

if [ ! -e $libdir ]; then
  mkdir -p $libdir
fi

if [ ! -e $examplesdir ]; then
  mkdir -p $examplesdir
fi

echo "Copying examples..."
for i in $(find examples -name "*.links"); do
  dest=$(echo $i | sed 's|^examples/||g');
  destcgi=$(echo $dest | sed "s|^\(.*\)\.links|$cgidir/\1\.cgi|g");
  desttxt=$(echo $dest | sed "s|^\(.*\)\.links|$examplesdir/\1\.txt|g");

  echo -n " "; echo $destcgi;
  echo -n " "; echo $desttxt;

  # ensure any required directories are created
  destdir=$(echo $destcgi | sed 's|/[^/]*$||g')
  if [ ! -e $destdir ]; then
    mkdir -p $destdir
  fi

  destdir=$(echo $desttxt | sed 's|/[^/]*$||g')
  if [ ! -e $destdir ]; then
    mkdir -p $destdir
  fi


  # copy cgi and set as executable
  echo "#!$path --config=$configfile" | cat - $i > $destcgi;
  chmod +x $destcgi

  if [ $copysource ]; then
    # copy .cgi to .txt for displaying source
    cp $destcgi $desttxt
  else
    # create .txt soft-link for displaying source
    ln -s $destcgi $desttxt
  fi
done

echo "Generating examples page..."
echo " $examplesdir/index.html"

sed "s|href=\"\([^\.][^\.]*\)\.links|href=\"$cgiurl\1\.cgi|g" examples/index.html \
| sed "s|href=\"\.\./examplessrc/\([^\.][^\.]*\)\.links|href=\"$examplesurl\1\.txt|g" \
> $examplesdir/index.html

echo "Copying libraries..."
echo " $libdir/"
if [ ! -e $libdir/yahoo ]; then
    mkdir -p $libdir/yahoo
fi
cp lib/js/yahoo/yahoo.js $libdir/yahoo
cp lib/js/yahoo/event.js $libdir/yahoo
cp lib/js/jslib.js $libdir/
cp lib/js/json.js $libdir/
cp lib/js/regex.js $libdir/


echo "Creating configuration file..."
echo " $configfile"
echo -e "jsliburl=$liburl\nprelude=$PWD/prelude.links\n" > $configfile

echo "To run the database examples you will need to specify"
echo "database_driver and database_args in the configuration file."
