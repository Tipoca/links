#### WEB-RELATED ####

# [freshResource] is a bit of magic that makes the subsequent actions a
# new resource.  That is, it redirects the user to a new URL for the
# continuation. If you call this immediately after doing a destructive
# action (e.g. database updates) then reloading and the back button 
# are made "safe": the visible URL does not refer to the action, but 
# only to what follows the freshResource call.
# Note: doesn't presently work in client context, but could.
sig freshResource : () -> ()
fun freshResource() {
  escape esc in {
    redirect("?_cont=" ++ reifyK(esc)); exit(0)
  }
}

# [sendSuspend] generates a page, outputs it, and terminates. It
# passes to pagef the continuation, which will resume at the place
# of the sendSuspend call. This continuation can be used in l:action
# for example, to pass form values through as the return value
# of sendSuspend.
sig sendSuspend : (((a) -> Page) -> Page) -> a
fun sendSuspend(pagef) {
  escape returnf in {
    exit(renderPage(pagef(returnf)))
  }
}
