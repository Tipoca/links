Iteration
for (i <- [1,2,3,4,5]) if (i == 3) [] else [i, i]
stdout : [1, 1, 2, 2, 4, 4, 5, 5] : [Int]

Where clause
for (i <- [1,2,3,4,5]) where (i <> 3) [i, i]
stdout : [1, 1, 2, 2, 4, 4, 5, 5] : [Int]

Set collection
for (i <- set[1,2,3,4,5]) if (i==3) set[] else set[i,i];;
stdout : Set[1, 2, 4, 5] : Set[Int]

Bag where clause
for (i <- bag[1,2,3,4,5]) (i <> 3) in bag[i, i]
stdout : bag[1, 1, 2, 2, 4, 4, 5, 5] : Bag[Int]

Concatenation/union
[1,2,3] ++ [4,5]
stdout : [1, 2, 3, 4, 5] : [Int]

Concatenation/union typing
[1,2,3] ++ Set[1,2,3]
stderr : @.*
exit : 1

Head and tail
hd(['a','b','c']) == 'a'
stdout : true : Bool

Head and tail on non-lists
hd(bag['a','b','c']) == 'a'
stderr : @.*
exit : 1

Equality
[1,2,3] == [1,2,3] && [1,2,3] <> [2,1,3]
stdout : true : Bool
