fun compute(id, count, total) server {
 if (count < total) {
  showProgress(id, count, total);
  compute(id, count+1, total)
 } else "done counting to " ++ intToString(total)
}

fun showProgress(id, count, total) client {
 var percent = 100.0 *. intToFloat(count) /. intToFloat(total);
 replaceNode(
        <div id="{id}"
             style="width:{floatToString(percent)}%;
                    background-color: black">|</div>,
        getNodeById(id)
 )
}

fun showAnswer(id, answer) client {
 replaceNode(
	<div id="{id}">{stringToXml(answer)}</div>,
        getNodeById(id)       
	)
}

fun makeBar(k) {
 var barId = "bar"++intToString(k);
 <#>
 <form l:onsubmit="{appendChildren(makeBar(k+1), getDocumentNode());
                    ignore(spawn {
                      showAnswer(barId, compute(barId, 0, stringToInt(n)))
                    }) }">
  <input type="text" l:name="n"/>
  <input type="submit"/>
 </form>
 <div id="{barId}"/>
 </#>
}

page
 <html>
  <body>
   {makeBar(0)}
  </body>
 </html>



