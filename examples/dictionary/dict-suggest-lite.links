fun suggest(prefix) client {
 replaceChildren(
  format(completions(prefix)),
  getNodeById("suggestions") 
 )
} 

fun format(words) client {
 for (var w <- words)
  <span>
   <b>{stringToXml(w.word)}</b>
   <i>{stringToXml(w.type)}</i>:
      {stringToXml(w.meaning)}
   <br/>
  </span>
}

fun completions(prefix) server {
 var wordlist = table "wordlist" with (
   word : String, 
   type : String, 
   meaning : String
 ) from (database "dictionary");

 if (prefix == "") []
 else {
  take(10, for (var w <-- wordlist)
            where (w.word ~ /{prefix}.*/)
            orderby (w.word)
            [w])
 }
}

fun receiver() {
 receive {
  case Suggest(prefix) -> {suggest(prefix); receiver();}
 }
}

fun main() client {
 var handler = spawn {receiver()};

 <html>
  <head>
   <title>Dictionary suggest</title>
  </head>
 <body>
  <h1>Dictionary suggest</h1>
  <form l:onkeyup="{handler!Suggest(prefix)}">
   <input type="text" l:name="prefix"
          autocomplete="off"/>
  </form>
  <div id="suggestions"/>
  </body>
 </html>
}

main()
