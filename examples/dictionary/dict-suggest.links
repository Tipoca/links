fun lowercase(s) {
  for (var c <- s) [toLower(c)]
}

fun suggest(prefixx) client {
 replaceChildren(
  format(completions(lowercase(prefixx))),
  getNodeById("suggestions") 
 )
} 

fun format(words) {
 for (var w <- words)
  <span>
   <b>{stringToXml(w.word)}</b>
   <i>{stringToXml(w.type)}</i>:
      {stringToXml(w.meaning)}
   <br/>
  </span>
}

fun completions(prefixx) server {
 var wordlist = table "wordlist" with (
   word : String, 
   type : String, 
   meaning : String
 ) from (database "dictionary");

 debug("prefixx: " ++ prefixx);

 if (prefixx == "") []
 else {
  take(10, for (var w <-- wordlist)
            where (w.word ~ /^{prefixx}.*/)
            orderby (w.word)
            [w])
 }
}

fun main() {
 page
  <html>
   <head>
    <title>Dictionary suggest</title>
    <style>
      input {{ width:500px }}
      #suggestions {{ text-align:left; width:500px;
                      background-color:#ccccff }}
    </style>
   </head>
  <body>
   <h1>Dictionary suggest</h1>
   <form l:onkeyup="{suggest(prefixx)}">
    <input type="text" l:name="prefixx"
           class="input" autocomplete="off"/>
   </form>
   <div id="suggestions" class="suggestions"/>
   </body>
  </html>
}

main()
