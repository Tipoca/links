fun waiting(id) client {
 receive {
  case MouseDown(target) -> dragging(id, target);
  case MouseUp           -> waiting(id);
  case MouseOut(relatedTarget) -> waiting(id);
 }
}

fun swapNodeRefs(x, y) {
 domSwapNodeRefs(x, y)
}

fun dragging(id, elem) client {
  receive {
     case MouseUp                 -> waiting(id);
     case MouseDown(target)       -> dragging(id, target);
     case MouseOut(relatedTarget) -> {
         if (not(domIsNullRef(relatedTarget)) &&
           domGetAttributeFromRef(domGetParentFromRef(relatedTarget), "id") == id) {
           swapNodeRefs(relatedTarget, elem);
           dragging(id, elem)          
         }
         else waiting(id)
    };
  }
}

fun format(item) {
    <li style="color: #7E9E50; font: 20px Georgia; background-color: #ECF3E1; border:1px solid #C5DEA1; cursor: move; margin: 0px;">{enxml(item)}</li><span/>
}

fun draggableList(id, items)
{
  var x = id;
  var listMgr = spawn { waiting(id) };
   <ul id="{id}" style="width: 200px; list-style-image: url(http://script.aculo.us/images/bullet.gif)"
      l:onmouseup   = "{listMgr ! (MouseUp)}"
      l:onmousedown = "{listMgr ! (MouseDown (eventGetTarget(event)))}"
      l:onmouseout  = "{listMgr ! (MouseOut (eventGetRelatedTarget(event)))}"
   >
    {for (item <- items)
         format(item)}
  </ul>

}

<html>
<body>
<h2 style="font: 42px/30px Georgia, serif; color: #7E9E50;">Great Bears</h2>
{draggableList("bears",["Pooh", "Paddington", "Rupert", "Edward"])}
<h2 style="font: 42px/30px Georgia, serif; color: #7E9E50;">Great Beers</h2>
{draggableList("beers",["Guinness", "Stella Artois", "McEwan"])}
<h2 style="font: 42px/30px Georgia, serif; color: #7E9E50;">Great Boars</h2>
{draggableList("boars",["Sus scrofa scrofa","Sus scrofa ussuricus","Sus scrofa cristatus","Sus scrofa taiwanus"])}
</body>
</html>

